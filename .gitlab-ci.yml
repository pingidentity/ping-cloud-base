workflow:
  rules:
    - if: $CI_COMMIT_MESSAGE =~ /\[skip pipeline\]/
      when: never
    - if: $CI_MERGE_REQUEST_ID
      when: never
    - when: always

## Pipeline stages ##
stages:
- compile
- find-cluster
- deploy
- pa-was-test
- integration-test
- chaos
- cleanup
- security # move this to the end and we'll use the "needs" keyword to allow it to run earlier and out of order

## Global environment variables ##
variables:
  DELETE_ENV_AFTER_PIPELINE: 'true'
  K8S_DEPLOY_TOOLS: docker.corp.pingidentity.com:5000/platform-pipeline/k8s-deploy-tools:v1.19-release-branch
  SHARED_CI_SCRIPTS_DIR: "/ci-scripts"
  BRANCH_SKIP_TESTS: >
    pingaccess/08-artifact-test.sh
    pingdelegator/01-admin-user-login.sh
    pingdirectory/03-backup-restore.sh
    pingdirectory/08-test-http-connection-handler.sh

## Compile stage ##
compile:
 stage: compile
 tags:
   - default-gitlab-runner-ping-cloud
 image: ${K8S_DEPLOY_TOOLS}
 variables:
   YAML_OUT_DIR: $CI_PROJECT_DIR/out
 before_script:
   - mkdir -p $YAML_OUT_DIR
 script:
   - ${SHARED_CI_SCRIPTS_DIR}/k8s/compile/compile.sh
 artifacts:
   paths:
     - out/
   expire_in: 1 day
   
## start security stage ##
copy-images:
  stage: security
  image: ${K8S_DEPLOY_TOOLS}
  needs:
    - compile
  dependencies:
    - compile
  variables:
    BELUGA_VERSION: $CI_COMMIT_REF_NAME
    ARTIFACTORY_URL: "docker.corp.pingidentity.com:5900"
    ARTIFACTORY_PATH: "beluga-xray"
    UBER_YAML: $CI_PROJECT_DIR/out/_builds_ping-cloud-private-tenant_ping-cloud-base.yaml
  allow_failure: true
  before_script:
    - aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | HOME=/tmp docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com
  script:
    - ${SHARED_CI_SCRIPTS_DIR}/k8s/security/copy-images.sh
  tags:
    - platform-publish-docker
  only:
    - /^.*-release-branch$/

scan:
  stage: security
  image: ${K8S_DEPLOY_TOOLS}
  needs:
    - compile
  dependencies:
    - compile
  variables:
    GIT_STRATEGY: none
    UBER_YAML: $CI_PROJECT_DIR/out/_builds_ping-cloud-private-tenant_ping-cloud-base.yaml
  allow_failure: true
  script:
    - kubescape scan --format json --format-version v2 --verbose framework all $UBER_YAML
  tags:
    - platform-publish-docker
  artifacts:
    paths:
    - report.json
    expire_in: 1 year
  only:
    - /^.*-release-branch$/
## end security stage ##

## Find cluster stage ##
find-cluster:
  stage: find-cluster
  tags:
    - default-gitlab-runner-ping-cloud
  image: ${K8S_DEPLOY_TOOLS}
  script:
    - ${SHARED_CI_SCRIPTS_DIR}/k8s/deploy/find_cluster.sh
  artifacts:
    reports:
      dotenv: cluster.env

## Deploy stage ##
deploy:
  stage: deploy
  tags:
    - default-gitlab-runner-ping-cloud
  image: ${K8S_DEPLOY_TOOLS}
  script:
    - ${SHARED_CI_SCRIPTS_DIR}/k8s/deploy/deploy.sh
  dependencies:
    - find-cluster

## Integration Test stage ##

## PA-WAS stage ##
pa-was-integration-tests:
  stage: pa-was-test
  tags:
    - default-gitlab-runner-ping-cloud
  image: ${K8S_DEPLOY_TOOLS}
  script:
    - ${SHARED_CI_SCRIPTS_DIR}/test/run-tests.sh pingaccess-was
  dependencies:
    - find-cluster

################################################
# All integration tests defined to run on the  #
# traditionally deployed P1AS                  #
################################################
.all-tests: &all-tests
  - pingdirectory
  - pingdelegator
  - pingfederate
  - pingaccess
  - pingcloud-services
  - pingcentral
  - pingdatasync
  - common
  - monitoring
  - health
  - pingone

#################################################
# All integration tests defined to run on the  #
# traditionally deployed P1AS                  #
################################################
.schedule-tests: &schedule-tests
  - pingdirectory
  - pingdelegator
  - pingfederate
  - pingaccess
  - pingcloud-services
  - pingdatasync
  - common
  - monitoring
  - health
  - pingone

################################################
# All integration tests defined to run on the  #
# traditionally deployed P1AS                  #
################################################
.chub-tests: &chub-tests
  - pingcloud-services
  - pingcentral
  - common
  - monitoring
  - health
  
.integration-tests-base:
  variables:
    TEST: ""
  stage: integration-test
  tags:
    - default-gitlab-runner-ping-cloud
  image: ${K8S_DEPLOY_TOOLS}
  script:
    - export SKIP_TESTS="${BRANCH_SKIP_TESTS}"
    - ${SHARED_CI_SCRIPTS_DIR}/test/run-tests.sh ${TEST}
  dependencies:
    - find-cluster
  artifacts:
    name: "integration_test_logs"
    paths:
      - tests/pingone/latest_logs/
    when: on_failure

integration-tests:
  extends: .integration-tests-base
  variables:
    TEST: ${TEST}
  parallel:
    matrix:
      - TEST: *all-tests
  rules:
    - if:  '$ENV_TYPE == null && $CI_PIPELINE_SOURCE != "schedule"'

integration-tests-scheduled-pipeline:
  extends: .integration-tests-base
  variables:
    TEST: ${TEST}
  parallel:
    matrix:
      - TEST: *schedule-tests
  rules:
    - if: '$ENV_TYPE != "customer-hub" && $CI_PIPELINE_SOURCE == "schedule"'

integration-tests-chub:
  extends: .integration-tests-base
  variables:
    TEST: ${TEST}
  parallel:
    matrix:
      - TEST: *chub-tests
  rules:
  - if: '$ENV_TYPE == "customer-hub"'
      
## Chaos testing stage ##
chaos-tests:
  stage: chaos
  tags:
    - default-gitlab-runner-ping-cloud
  image: ${K8S_DEPLOY_TOOLS}
  script:
    - ${SHARED_CI_SCRIPTS_DIR}/test/run-tests.sh chaos
  dependencies:
    - find-cluster

## Cleanup stage ##
cleanup:
  stage: cleanup
  tags:
    - default-gitlab-runner-ping-cloud
  image: ${K8S_DEPLOY_TOOLS}
  script:
    - ${SHARED_CI_SCRIPTS_DIR}/k8s/cleanup/teardown.sh
  dependencies:
    - find-cluster
