############################################################
# Multi-region parameters
############################################################
IS_MULTI_CLUSTER=${IS_MULTI_CLUSTER}

# Primary region name - must be a valid AWS region name
# Primary region should have the same value for REGION and PRIMARY_REGION
PRIMARY_REGION=${PRIMARY_REGION}

# Tenant domain suffix for customer for region
# Primary region should have the same value for TENANT_DOMAIN and PRIMARY_TENANT_DOMAIN
PRIMARY_TENANT_DOMAIN=${PRIMARY_TENANT_DOMAIN}

# Optional comma-separated list of the tenant domain suffixes of secondary regions used for
# PingFederate adaptive clustering using the JGroups DNS_PING discovery protocol:
#
#   - Do NOT include the primary tenant domain in the list
#   - Do NOT include the CDE prefix in the domain name
#
# For example, if the primary domain is "tuna.us1.ping-preview.cloud", then set it
# to "tuna.eu1.ping-preview.cloud,tuna.au1.ping-preview.cloud" to specify secondary
# domains in regions eu1 and au1.
#
# NOTES:
#   - Only used in multi-cluster environments. If provided, PF will be configured with DNS_PING.
#   - It is recommended that SECONDARY_TENANT_DOMAINS be set apriori, even before the
#     secondary regions are created to avoid pod rollouts. DNS_PING will simply ignore
#     unreachable domains. If it is not set beforehand, then all servers in the PF
#     cluster (admin and engines) must be re-rolled to pick up the change.
SECONDARY_TENANT_DOMAINS="${SECONDARY_TENANT_DOMAINS}"

# Region-independent URL used for DNS failover/routing
GLOBAL_TENANT_DOMAIN=${GLOBAL_TENANT_DOMAIN}

############################################################
# S3 buckets
############################################################
# Ping-hosted common artifacts URL
PING_ARTIFACT_REPO_URL=${PING_ARTIFACT_REPO_URL}

# Customer-specific log and backup URLs for region
PD_MONITOR_BUCKET_URL=${PD_MONITOR_BUCKET_URL}
LOG_ARCHIVE_URL=${LOG_ARCHIVE_URL}
BACKUP_URL=${BACKUP_URL}
PGO_BACKUP_BUCKET_NAME=${PGO_BACKUP_BUCKET_NAME}

############################################################
# Platform event queue and SSM variables
############################################################
PLATFORM_EVENT_QUEUE_NAME=${PLATFORM_EVENT_QUEUE_NAME}
PLATFORM_EVENT_QUEUE_POLL_BATCH_SIZE=1
PLATFORM_EVENT_QUEUE_POLL_INTERVAL_SECONDS=2
CUSTOMER_SSM_PATH_PREFIX=${CUSTOMER_SSM_PATH_PREFIX}
CUSTOMER_SSO_SSM_PATH_PREFIX=${CUSTOMER_SSO_SSM_PATH_PREFIX}
SERVICE_SSM_PATH_PREFIX=${SERVICE_SSM_PATH_PREFIX}
ARGOCD_CDE_ROLE_SSM_TEMPLATE=${ARGOCD_CDE_ROLE_SSM_TEMPLATE}
ARGOCD_CDE_URL_SSM_TEMPLATE=${ARGOCD_CDE_URL_SSM_TEMPLATE}

############################################################
# Cluster state repo details
############################################################
# The known-hosts file to trust the cluster state repo server for git/ssh cloning
KNOWN_HOSTS_CLUSTER_STATE_REPO="${KNOWN_HOSTS_CLUSTER_STATE_REPO}"

CLUSTER_STATE_REPO_URL=${CLUSTER_STATE_REPO_URL}
CLUSTER_STATE_REPO_BRANCH=${CLUSTER_STATE_REPO_BRANCH}

# The application reconciliation timeout in seconds for ArgoCD, i.e. how frequently ArgoCD should poll the
# cluster-state-repo for changes. To disable reconciliation set it to 0.
APP_RESYNC_SECONDS=${APP_RESYNC_SECONDS}

############################################################
# Miscellaneous ping-cloud-base variables
############################################################
# Namespace where Ping apps are deployed
PING_CLOUD_NAMESPACE=${PING_CLOUD_NAMESPACE}

# The ping-cloud-base git URL and branch for base Kubernetes manifests
K8S_GIT_URL=${K8S_GIT_URL}
K8S_GIT_BRANCH=${K8S_GIT_BRANCH}

# The name of the Docker image registry
ECR_REGISTRY_NAME=${ECR_REGISTRY_NAME}

############################################################
# Server profile variables
############################################################
SERVER_PROFILE_URL=${SERVER_PROFILE_URL}
SERVER_PROFILE_BRANCH=${SERVER_PROFILE_BRANCH_DERIVED}

############################################################
# Environment-specific variables
############################################################
# Used by server profile hooks
ENVIRONMENT_TYPE=${ENVIRONMENT_TYPE}

# Used by Kubernetes manifests
ENV=${ENV}
KUSTOMIZE_BASE=${KUSTOMIZE_BASE}
ACCOUNT_TYPE=${ACCOUNT_TYPE}

############################################################
# Lets Encrypt server
############################################################
LETS_ENCRYPT_SERVER=${LETS_ENCRYPT_SERVER}

############################################################
# PingCommon environment variables
############################################################
USER_BASE_DN=${USER_BASE_DN}

# Multiple Backend IDs Base DNs
USER_BASE_DN_2=${USER_BASE_DN_2}
USER_BASE_DN_3=${USER_BASE_DN_3}
USER_BASE_DN_4=${USER_BASE_DN_4}
USER_BASE_DN_5=${USER_BASE_DN_5}

# Multiple Backend IDs
USER_BACKEND_ID_2=userRoot_2
USER_BACKEND_ID_3=userRoot_3
USER_BACKEND_ID_4=userRoot_4
USER_BACKEND_ID_5=userRoot_5

ECR_ENV=

############################################################
# PingFederate variables for environment
############################################################
PF_PD_BIND_PORT=${PF_PD_BIND_PORT}
PF_PD_BIND_PROTOCOL=${PF_PD_BIND_PROTOCOL}
PF_PD_BIND_USESSL=${PF_PD_BIND_USESSL}

PF_MIN_HEAP=${PF_MIN_HEAP}
PF_MAX_HEAP=${PF_MAX_HEAP}
PF_MIN_YGEN=${PF_MIN_YGEN}
PF_MAX_YGEN=${PF_MAX_YGEN}

# This variable's value will make it onto the branding for the PF admin console and
# will include the name of the environment and the region where it's deployed.
PF_ADMIN_CONSOLE_ENVIRONMENT=${ADMIN_CONSOLE_BRANDING}

############################################################
# PingAccess variables for environment
############################################################
PA_WAS_MIN_HEAP=${PA_WAS_MIN_HEAP}
PA_WAS_MAX_HEAP=${PA_WAS_MAX_HEAP}
PA_WAS_MIN_YGEN=${PA_WAS_MIN_YGEN}
PA_WAS_MAX_YGEN=${PA_WAS_MAX_YGEN}
PA_WAS_GCOPTION=${PA_WAS_GCOPTION}

PA_MIN_HEAP=${PA_MIN_HEAP}
PA_MAX_HEAP=${PA_MAX_HEAP}
PA_MIN_YGEN=${PA_MIN_YGEN}
PA_MAX_YGEN=${PA_MAX_YGEN}
PA_GCOPTION=${PA_GCOPTION}

############################################################
# DevOps License environment variables
############################################################
PING_IDENTITY_DEVOPS_USER=${PING_IDENTITY_DEVOPS_USER}
PING_IDENTITY_DEVOPS_KEY=${PING_IDENTITY_DEVOPS_KEY}

############################################################
# Ping application image tags
############################################################
PINGACCESS_IMAGE_TAG=v1.19.1.0_RC2
PINGACCESS_WAS_IMAGE_TAG=v1.19.1.0_RC2
PINGFEDERATE_IMAGE_TAG=v1.19.1.0_RC2
PINGDIRECTORY_IMAGE_TAG=v1.19.1.0_RC2
PINGDELEGATOR_IMAGE_TAG=v1.19.1.0_RC2
PINGCENTRAL_IMAGE_TAG=v1.19.1.0_RC2
PINGDATASYNC_IMAGE_TAG=v1.19.1.0_RC2

############################################################
# Ping solution image tags
############################################################
BOOTSTRAP_IMAGE_TAG=v1.19.1.0_RC2
P14C_INTEGRATION_IMAGE_TAG=v1.19.1.0_RC2

############################################################
# Cluster name variables
############################################################
CLUSTER_NAME=${CLUSTER_NAME}
CLUSTER_NAME_LC=${CLUSTER_NAME_LC}

############################################################
# Primary DNS zone
############################################################
PRIMARY_DNS_ZONE=${PRIMARY_DNS_ZONE}

############################################################
# Public hostnames
############################################################
# Ping admin configuration required for admin access and clustering
PD_PRIMARY_PUBLIC_HOSTNAME=pingdirectory-admin.${PRIMARY_DNS_ZONE_DERIVED}
PF_ADMIN_PUBLIC_HOSTNAME=pingfederate-admin.${PRIMARY_DNS_ZONE_DERIVED}
PF_ADMIN_API_PUBLIC_HOSTNAME=pingfederate-admin-api.${PRIMARY_DNS_ZONE_DERIVED}
PA_ADMIN_PUBLIC_HOSTNAME=pingaccess-admin.${PRIMARY_DNS_ZONE_DERIVED}
PA_ADMIN_API_PUBLIC_HOSTNAME=pingaccess-admin-api.${PRIMARY_DNS_ZONE_DERIVED}
PA_WAS_ADMIN_PUBLIC_HOSTNAME=pingaccess-was-admin.${PRIMARY_DNS_ZONE_DERIVED}
PC_ADMIN_PUBLIC_HOSTNAME=pingcentral-admin.${PRIMARY_DNS_ZONE_DERIVED}
PC_ADMIN_PRIVATE_SITE_HOSTNAME=pingcentral.${PRIMARY_TENANT_DOMAIN_DERIVED}

PD_CLUSTER_PUBLIC_HOSTNAME=pingdirectory-cluster.${PRIMARY_DNS_ZONE_DERIVED}
PF_CLUSTER_PUBLIC_HOSTNAME=pingfederate-cluster.${PRIMARY_DNS_ZONE_DERIVED}
PA_CLUSTER_PUBLIC_HOSTNAME=pingaccess-cluster.${PRIMARY_DNS_ZONE_DERIVED}
PA_WAS_CLUSTER_PUBLIC_HOSTNAME=pingaccess-was-cluster.${PRIMARY_DNS_ZONE_DERIVED}

# Ping engine hostname variables
PD_PUBLIC_HOSTNAME=pingdirectory-admin.${DNS_ZONE_DERIVED}
PD_HTTP_PUBLIC_HOSTNAME=pingdirectory.${DNS_ZONE_DERIVED}
PD_DELEGATOR_PUBLIC_HOSTNAME=pingdelegator.${DNS_ZONE_DERIVED}
PD_DELEGATOR_PUBLIC_PORT=443
PF_ENGINE_PUBLIC_HOSTNAME=pingfederate.${DNS_ZONE_DERIVED}
PA_ENGINE_PUBLIC_HOSTNAME=pingaccess.${DNS_ZONE_DERIVED}
PA_WAS_ENGINE_PUBLIC_HOSTNAME=pingaccess-was.${DNS_ZONE_DERIVED}

PROMETHEUS_PUBLIC_HOSTNAME=prometheus.${DNS_ZONE_DERIVED}
GRAFANA_PUBLIC_HOSTNAME=monitoring.${DNS_ZONE_DERIVED}
OSD_PUBLIC_HOSTNAME=logs.${DNS_ZONE_DERIVED}
ARGOCD_PUBLIC_HOSTNAME=argocd.${DNS_ZONE_DERIVED}

HEALTHCHECK_HTTPBIN_PA_WAS_PUBLIC_HOSTNAME=healthcheck-httpbin-pa-was.${PRIMARY_DNS_ZONE_DERIVED}
HEALTHCHECK_HTTPBIN_PA_PUBLIC_HOSTNAME=healthcheck-httpbin-pa.${PRIMARY_DNS_ZONE_DERIVED}

# Retention time for Prometheus. Could be set in years(y), weeks(w), days(d), hours(h), minutes(m) or seconds(s)
PROMETHEUS_RETENTION_TIME=15d

# Commands and schedules to obtain users count. Values should be in single quotes. Schedules should be in cron format. Command should return only numeric value(int\float)
PROMETHEUS_USER_COUNT_1_COMMAND='echo 0'
PROMETHEUS_USER_COUNT_1_SCHEDULE='* * * * *'
PROMETHEUS_USER_COUNT_2_COMMAND='echo 0'
PROMETHEUS_USER_COUNT_2_SCHEDULE='* * * * *'
PROMETHEUS_USER_COUNT_3_COMMAND='echo 0'
PROMETHEUS_USER_COUNT_3_SCHEDULE='* * * * *'
PROMETHEUS_USER_COUNT_4_COMMAND='echo 0'
PROMETHEUS_USER_COUNT_4_SCHEDULE='* * * * *'

# Variable to have ping-cloud namespace in prometheus-job-exporter
PROMETHEUS_PING_NAMESPACE=${PING_CLOUD_NAMESPACE}

#### FEATURE FLAGS #####################################################################################################
# Set to true to enable, most are disabled by default
# Please follow runbook instructions for the given feature flag to enable/disable

# !!! Provisioning for PingFederate is not yet available for multi-region customers !!!
# Runbook: https://confluence.pingidentity.com/display/PingCloud/How+to+Enable+and+Configure+PingFederate+Provisioning
PF_PROVISIONING_ENABLED=${PF_PROVISIONING_ENABLED}

RADIUS_PROXY_ENABLED=${RADIUS_PROXY_ENABLED}
# List of ping apps(pingaccess,pingaccess-was,pingdirectory,pingdelegator,pingfederate) for which you can enable external ingress(the values are ping app names)Examplelist:(pingaccess pingdirectory pingfederate)
EXTERNAL_INGRESS_ENABLED="${EXTERNAL_INGRESS_ENABLED}"

# Runbook: https://pingidentity.atlassian.net/wiki/spaces/PDA/pages/427688292/How+to+Enable+and+Disable+Healthchecks+-+1.19.0
HEALTHCHECKS_ENABLED=${HEALTHCHECKS_ENABLED}

CUSTOMER_PINGONE_ENABLED=${CUSTOMER_PINGONE_ENABLED}
########################################################################################################################

# For ArgoCD-status slack notifications (notifications.argoproj.io/subscribe.on-sync-failed.slack)
SLACK_CHANNEL=${SLACK_CHANNEL}

# Dashboards repo variables
DASH_REPO_URL=https://github.com/pingidentity/ping-cloud-dashboards
DASH_REPO_BRANCH=v1.19-release-branch

# Healthcheck variables
CLUSTER_HEALTHCHECK_SCHEDULE="* * * * *"
PINGACCESS_HEALTHCHECK_SCHEDULE="* * * * *"
PINGACCESS_WAS_HEALTHCHECK_SCHEDULE="* * * * *"
PINGDIRECTORY_HEALTHCHECK_SCHEDULE="* * * * *"
PINGFEDERATE_HEALTHCHECK_SCHEDULE="* * * * *"


# cert-manager variables
# The maximum duration allowed by Let's Encrypt for certificate rotation is 90 days (equivalent to 2160 hours).
# See here for more details: https://letsencrypt.org/docs/faq/#what-is-the-lifetime-for-let-s-encrypt-certificates-for-how-long-are-they-valid
# But it allows the certificate to be renewed before the duration.
# Renewing before 30 days (aka 720 hours) of expiration is suggested by let's encrypt
# Meaning if cert expires in 90 days we will rotate and renew in 60 days
# NOTE: Format must exactly match Argo's expectations until https://github.com/argoproj/argo-cd/pull/16587 is fixed
# Format example: 720h0m0s - check Argo sync if not sure after changing this value to make sure there is no diff.
CERT_RENEW_BEFORE=${CERT_RENEW_BEFORE}

# Variable to set the default cluster resource uptime/working hours
DEFAULT_CLUSTER_UPTIME="${DEFAULT_CLUSTER_UPTIME}"
