apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: nr-license-key
  annotations:
    sealedsecrets.bitnami.com/managed: "true"
    argocd.argoproj.io/sync-options: Prune=false

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: logstash-elastic
  labels:
    app: logstash-elastic
spec:
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: logstash-elastic
  template:
    metadata:
      labels:
        app: logstash-elastic
    spec:
      securityContext:
        fsGroup: 1000
      serviceAccountName: logstash-elastic
      affinity:
        podAntiAffinity:
          # Add a soft requirement for each Logstash pod to be deployed to a different AZ
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - logstash-elastic
                topologyKey: "topology.kubernetes.io/zone"
      initContainers:
        - name: wait-for-bootstrap-completed
          securityContext:
            runAsGroup: 2000
            runAsNonRoot: true
            runAsUser: 1000
            allowPrivilegeEscalation: false
          image: public.ecr.aws/r2h3l6e4/pingcloud-services/toolkit:v1.19.0
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - '-c'
            - >-
              kubectl wait --for=condition=complete --timeout=900s -n
              elastic-stack-logging job/opensearch-bootstrap
        - name: create-enrichment-cache-files
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            allowPrivilegeEscalation: false
          image: public.ecr.aws/r2h3l6e4/pingcloud-monitoring/enrichment-bootstrap:v1.19.1.0_RC3
          imagePullPolicy: Always
          args:
            - create_enrichment_cache_files
          env:
            - name: ENRICHMENT_TOR_FEED_URL
              value: 'https://check.torproject.org/exit-addresses'
            - name: ENRICHMENT_ALIEN_VAULT_FEED_URL
              value: 'https://reputation.alienvault.com/reputation.generic'
            - name: ENRICHMENT_FILEPATH
              value: /enrichment-cache-files/
            - name: PYTHONUNBUFFERED
              value: '1'
            - name: PYTHONIOENCODING
              value: UTF-8
          volumeMounts:
            - name: enrichment-cache
              mountPath: /enrichment-cache
            - name: enrichment-cache-files
              mountPath: /enrichment-cache-files
      containers:
        - name: exporter
          image: public.ecr.aws/r2h3l6e4/pingcloud-clustertools/prom/logstash-exporter:v0.0.1
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9198
              name: metrics
              protocol: TCP
          resources:
            limits:
              cpu: "500m"
              memory: 500Mi
            requests:
              cpu: "150m"
              memory: 100Mi
        - name: logstash
          image: public.ecr.aws/r2h3l6e4/pingcloud-monitoring/logstash:v1.19.1.0_RC3
          imagePullPolicy: Always
          command:
            - "/bin/sh"
          args:
            - "-c"
            - "S3_BUCKET_NAME=${S3_BUCKET#s3://} /usr/local/bin/docker-entrypoint"
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            allowPrivilegeEscalation: false
          env:
            - name: CONTAINER_NAME
              value: logstash
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: CONFIG_RELOAD_AUTOMATIC
              value: 'false'
            - name: LOG_FORMAT
              value: json
            - name: PIPELINE_BATCH_SIZE
              value: '1000'
            - name: PIPELINE_ECS_COMPATIBILITY
              value: disabled
            - name: PIPELINE_ORDERED
              value: 'false'
            - name: QUEUE_TYPE
              value: persisted
            - name: QUEUE_MAX_BYTES
              value: 10gb
            - name: QUEUE_DRAIN
              value: "true"
            - name: DEAD_LETTER_QUEUE_ENABLE
              value: "true"
            - name: PATH_DEAD_LETTER_QUEUE
              value: "/usr/share/logstash/data/queue/dead_letter"
            - name: LS_JAVA_OPTS
              value: "-Xms1g -Xmx1g"
            - name: XPACK_MONITORING_ENABLED
              value: "false"
            - name: OS_USER
              valueFrom:
                secretKeyRef:
                  key: username
                  name: os-logstash-creds
            - name: OS_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: os-logstash-creds
            - name: S3_BUCKET
              valueFrom:
                  configMapKeyRef:
                    name: s3-raw-logs-bucket
                    key: bucketName
            - name: AWS_REGION
              valueFrom:
                configMapKeyRef:
                  name: cluster-info
                  key: logs.region
            - name: CW_CLUSTER_NAME
              valueFrom:
                configMapKeyRef:
                  name: cluster-info
                  key: cluster.name
            - name: NR_LICENSE_KEY
              valueFrom:
                secretKeyRef:
                  name: nr-license-key
                  key: NEW_RELIC_LICENSE_KEY
          envFrom:
            - configMapRef:
                name: elk-environment-variables
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 9600
            initialDelaySeconds: 300
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 10
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 3
            timeoutSeconds: 5
          startupProbe:
            failureThreshold: 30
            httpGet:
              path: /
              port: 8080
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              cpu: "500m"
              memory: 4Gi
            requests:
              cpu: "150m"
              memory: 1Gi
          ports:
            - containerPort: 9600
              name: rest
              protocol: TCP
            - containerPort: 8080
              name: http-log-input
              protocol: TCP
            - containerPort: 8081
              name: http-s3-input
              protocol: TCP
            - containerPort: 8082
              name: http-cw-input
              protocol: TCP
            - containerPort: 8083
              name: http-nr-input
              protocol: TCP
          volumeMounts:
            - name: logstash-pipelines
              mountPath: /usr/share/logstash/config/pipelines.yml
              subPath: pipelines.yml
              readOnly: true
            - name: logstash-pipeline-main
              mountPath: /usr/share/logstash/pipeline/main
              readOnly: true
            - name: logstash-pipeline-customer
              mountPath: /usr/share/logstash/pipeline/customer
              readOnly: true
            - name: logstash-pipeline-s3
              mountPath: /usr/share/logstash/pipeline/s3
              readOnly: true
            - name: logstash-pipeline-dlq
              mountPath: /usr/share/logstash/pipeline/dlq
              readOnly: true
            - name: logstash-pipeline-nr
              mountPath: /usr/share/logstash/pipeline/newrelic
              readOnly: true
            - name: logstash-search-template
              mountPath: /etc/logstash/templates
              readOnly: true
            - name: enrichment-cache-files
              mountPath: /enrichment-cache-files
              readOnly: false
            - name: logstash-gp3
              mountPath: /usr/share/logstash/data/queue
              readOnly: false
        # Sidecar enrichment container which updates Logstash dictionaries
        - name: enrichment-sidecar
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            allowPrivilegeEscalation: false
          image: public.ecr.aws/r2h3l6e4/pingcloud-monitoring/enrichment-bootstrap:v1.19.1.0_RC3
          imagePullPolicy: Always
          args:
            - enrichment_sidecar
          env:
            - name: ENRICHMENT_TOR_FEED_URL
              value: 'https://check.torproject.org/exit-addresses'
            - name: ENRICHMENT_ALIEN_VAULT_FEED_URL
              value: 'https://reputation.alienvault.com/reputation.generic'
            - name: ENRICHMENT_FILEPATH
              value: /enrichment-cache-files/
            - name: ENRICHMENT_DELAY_SECONDS
              value: '600'
            - name: PYTHONUNBUFFERED
              value: '1'
            - name: PYTHONIOENCODING
              value: UTF-8
          volumeMounts:
            - name: enrichment-cache-files
              mountPath: /enrichment-cache-files
              readOnly: false
          resources:
            limits:
              cpu: "500m"
              memory: 500Mi
            requests:
              cpu: "150m"
              memory: 100Mi
      terminationGracePeriodSeconds: 60
      volumes:
        - name: logstash-pipeline-main
          configMap:
            name: logstash-pipeline-main
        - name: logstash-pipeline-customer
          configMap:
            name: logstash-pipeline-customer
        - name: logstash-pipeline-s3
          configMap:
            name: logstash-pipeline-s3
        - name: logstash-pipeline-dlq
          configMap:
            name: logstash-pipeline-dlq
        - name: logstash-pipeline-nr
          configMap:
            name: logstash-pipeline-nr
        - name: logstash-pipelines
          configMap:
            name: logstash-pipelines
        - name: logstash-search-template
          configMap:
            name: logstash-search-template
        - name: enrichment-cache
          configMap:
            name: enrichment-cache
        - name: enrichment-cache-files
          emptyDir: {}
  serviceName: logstash-elastic
  volumeClaimTemplates:
    - metadata:
        name: logstash-gp3
        annotations:
          volume.autoscaler.kubernetes.io/scale-above-percent: "85"
          volume.autoscaler.kubernetes.io/scale-up-percent: "25"
        labels:
          app: logstash-elastic
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: logstash-gp3
        resources:
          requests:
            storage: 50Gi

---
kind: Service
apiVersion: v1
metadata:
  name: logstash-elastic
  labels:
    app: logstash-elastic
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/scheme: "http"
    prometheus.io/path: "/metrics"
    prometheus.io/port: "9198"
    newrelic.io/scrape: "true"
spec:
  selector:
    app: logstash-elastic
  ports:
    - port: 9600
      name: rest
    - port: 8080
      name: http-main-input
    - port: 9198
      name: metrics
    - port: 8081
      name: http-s3-input
    - port: 8082
      name: http-cw-input
    - port: 8083
      name: http-nr-input
    - port: 8084
      name: http-customer-input

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: logstash-elastic
  labels:
    app: logstash-elastic

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: logstash-elastic
  labels:
    app: logstash-elastic
rules:
- apiGroups:
  - ""
  - "batch"
  resources:
  - pods
  - namespaces
  - jobs
  verbs:
  - get
  - list
  - watch
  
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: logstash-elastic
roleRef:
  kind: ClusterRole
  name: logstash-elastic
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: logstash-elastic
