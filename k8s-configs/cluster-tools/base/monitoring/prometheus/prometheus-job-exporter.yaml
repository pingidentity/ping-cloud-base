apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-job-exporter-config
data:
  config.yaml: |
    metrics:
      users_count_1:
        command: ${PROMETHEUS_USER_COUNT_1_COMMAND}
        interval: ${PROMETHEUS_USER_COUNT_1_SCHEDULE}
        description: Count of users
        pod_name: pingdirectory-0
        container_name: pingdirectory
        namespace: '${PROMETHEUS_PING_NAMESPACE}'
      users_count_2:
        command: ${PROMETHEUS_USER_COUNT_2_COMMAND}
        interval: ${PROMETHEUS_USER_COUNT_2_SCHEDULE}
        description: Count of users
        pod_name: pingdirectory-0
        container_name: pingdirectory
        namespace: '${PROMETHEUS_PING_NAMESPACE}'
      users_count_3:
        command: ${PROMETHEUS_USER_COUNT_3_COMMAND}
        interval: ${PROMETHEUS_USER_COUNT_3_SCHEDULE}
        description: Count of users
        pod_name: pingdirectory-0
        container_name: pingdirectory
        namespace: '${PROMETHEUS_PING_NAMESPACE}'
      users_count_4:
        command: ${PROMETHEUS_USER_COUNT_4_COMMAND}
        interval: ${PROMETHEUS_USER_COUNT_4_SCHEDULE}
        description: Count of users
        pod_name: pingdirectory-0
        container_name: pingdirectory
        namespace: '${PROMETHEUS_PING_NAMESPACE}'

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-job-exporter
  namespace: prometheus
  labels:
    app: prometheus-job-exporter
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus-job-exporter
  template:
    metadata:
      labels:
        app: prometheus-job-exporter
    spec:
      serviceAccountName: prometheus-job-exporter
      containers:
        - name: prometheus-job-exporter
          securityContext:
            runAsGroup: 9999
            runAsNonRoot: true
            runAsUser: 9031
            allowPrivilegeEscalation: false
          envFrom:
            - configMapRef:
                name: prometheus-environment-variables
          image: public.ecr.aws/r2h3l6e4/pingcloud-monitoring/prometheus-job-exporter:v1.19.1.0_RC3
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
              protocol: TCP
          volumeMounts:
            - mountPath: /app/config.yaml
              name: prometheus-job-exporter-config
              subPath: config.yaml
              readOnly: false
          resources:
            limits:
              cpu: 100m
              memory: 300Mi
            requests:
              cpu: 100m
              memory: 100Mi
      volumes:
        - name: prometheus-job-exporter-config
          configMap:
            name: prometheus-job-exporter-config

---
kind: Service
apiVersion: v1
metadata:
  name: prometheus-job-exporter
  namespace: prometheus
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/path: "/"
    prometheus.io/port: "8000"
    newrelic.io/scrape: "true"
spec:
  selector:
    app: prometheus-job-exporter
  ports:
  - port: 8000
    name: metrics
  clusterIP: None
---
# Define role which allows access to endpoint /metrics within the cluster
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus-job-exporter
rules:
- apiGroups: [""]
  resources:
  - pods
  - namespaces
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources:
  - configmaps
  verbs: ["get"]
- apiGroups: [ "" ]
  resources: [ "pods/exec", "pods/log"]
  verbs: [ "get", "create" ]

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus-job-exporter
  namespace: prometheus

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus-job-exporter
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus-job-exporter
subjects:
- kind: ServiceAccount
  name: prometheus-job-exporter
  namespace: prometheus
