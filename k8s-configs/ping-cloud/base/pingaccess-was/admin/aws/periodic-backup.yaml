apiVersion: v1
kind: ConfigMap
metadata:
  name: pingaccess-was-backup
data:
  backup-archive-data.sh: |-
    #!/bin/sh

    # Install kubectl
    curl -sS https://storage.googleapis.com/kubernetes-release/release/"${KUBECTL_VERSION}"/bin/linux/amd64/kubectl \
    -o /tmp/kubectl

    chmod +x /tmp/kubectl

    UPLOAD_FILES=
    SERVER="${K8S_STATEFUL_SET_NAME_PINGACCESS_WAS}-0"
    SCRIPT="${HOOKS_DIR}"/90-upload-backup-s3.sh
    LOG_FILE=/tmp/upload.log

    echo "Uploading pingaccess backup data on server ${SERVER}"
    /tmp/kubectl exec "${SERVER}" -- sh -c \
            "test -x ${SCRIPT} && \
            ${SCRIPT}"> "${LOG_FILE}"

    if test ${?} -eq 0; then
      # Sending logs to STDOUT
      cat ${LOG_FILE}
      UPLOAD_FILE=$(tail -1 "${LOG_FILE}")
      test -z "${UPLOAD_FILES}" && UPLOAD_FILES="${UPLOAD_FILE}" || UPLOAD_FILES="${UPLOAD_FILES} ${UPLOAD_FILE}"
    else
      echo "Upload script not found on server ${SERVER}"
    fi

    # Print the names of the uploaded files so callers know exactly what was uploaded
    echo "The following files were uploaded:"
    echo "${UPLOAD_FILES}"

---

apiVersion: batch/v1
kind: CronJob
metadata:
  name: pingaccess-was-periodic-backup
spec:
  schedule: "30 * * * *"
  successfulJobsHistoryLimit: 0
  failedJobsHistoryLimit: 1
  concurrencyPolicy: Forbid
  startingDeadlineSeconds: 90
  jobTemplate:
    spec:
      backoffLimit: 0
      template:
        spec:
          serviceAccount: ping-serviceaccount
          affinity:
            podAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                  - key: statefulset.kubernetes.io/pod-name
                    operator: In
                    values:
                    - "pingaccess-was-admin-0"
                topologyKey: "kubernetes.io/hostname"
          restartPolicy: OnFailure
          containers:
          - name: pingaccess-was-backup
            image: public.ecr.aws/r2h3l6e4/pingcloud-apps/pingaccess-was/dev:v1.19-release-branch-latest
            imagePullPolicy: Always
            securityContext:
              runAsGroup: 9999
              runAsNonRoot: true
              runAsUser: 9031
              allowPrivilegeEscalation: false
            command:
            - /opt/in/backup-archive-data.sh
            envFrom:
            - configMapRef:
                name: pingaccess-was-admin-environment-variables
            - configMapRef:
                name: pingcommon-environment-variables
            env:
            - name: LOG4J_FORMAT_MSG_NO_LOOKUPS
              value: "true"
            volumeMounts:
            - name: pingaccess-was-backup
              mountPath: /opt/in/backup-archive-data.sh
              subPath: backup-archive-data.sh
          volumes:
          - name: pingaccess-was-backup
            configMap:
              name: pingaccess-was-backup
              defaultMode: 0555
