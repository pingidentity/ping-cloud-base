# This defines the pingaccess-was engine deployment.

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: pingaccess-was
  labels:
    cluster: pingaccess-was-cluster
    role: pingaccess-was-engine
spec:
  selector:
    matchLabels:
      role: pingaccess-was-engine
  serviceName: pingaccess-was
  podManagementPolicy: OrderedReady
  template:
    metadata:
      name: pingaccess-was-engine
      labels:
        cluster: pingaccess-was-cluster
        role: pingaccess-was-engine
        pod-reaper: enabled
      annotations:
        lastUpdateReason: "NA"
    spec:
      serviceAccountName: ping-serviceaccount
      affinity:
        podAntiAffinity:
          # Add a soft requirement for each PA runtime pod to be deployed to a different AZ
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: role
                  operator: In
                  values:
                  - pingaccess-was-engine
              topologyKey: "topology.kubernetes.io/zone"
      initContainers:
      - name: pingaccess-was-init
        securityContext:
          runAsGroup: 9999
          runAsNonRoot: true
          runAsUser: 9031
          allowPrivilegeEscalation: false
        image: public.ecr.aws/r2h3l6e4/pingcloud-services/toolkit:v1.15.0
        imagePullPolicy: IfNotPresent
        command:
        - /copy-dependencies.sh
        volumeMounts:
        - name: ssh-dir
          mountPath: /.ssh
        - name: data-dir
          mountPath: /data
        - name: ssh-id-key-secret
          mountPath: /id_rsa
          subPath: id_rsa
        - name: known-hosts-config
          mountPath: /known_hosts
          subPath: known_hosts
        - name: pingaccess-was-init
          mountPath: /copy-dependencies.sh
          subPath: copy-dependencies.sh
        - name: pingaccess-was-init
          mountPath: /utils.lib.sh
          subPath: utils.lib.sh
        - name: pingaccess-was-init
          mountPath: /logger.lib.sh
          subPath: logger.lib.sh
        envFrom:
        - configMapRef:
            name: pingaccess-was-environment-variables
      - name: wait-for-services
        # FIXME PDO-3576: switch to same user as app
        securityContext:
          runAsGroup: 9999
          runAsNonRoot: true
          runAsUser: 9031
          allowPrivilegeEscalation: false
        image: public.ecr.aws/r2h3l6e4/pingcloud-clustertools/busybox:1.32
        imagePullPolicy: IfNotPresent
        command:
        - /wait-for-services.sh
        volumeMounts:
        - name: pingaccess-was-init
          mountPath: /utils.lib.sh
          subPath: utils.lib.sh
        - name: pingaccess-was-init
          mountPath: /logger.lib.sh
          subPath: logger.lib.sh
        - name: pingaccess-was-init
          mountPath: /wait-for-services.sh
          subPath: wait-for-services.sh
        envFrom:
        - configMapRef:
            name: pingaccess-was-environment-variables
      - name: newrelic-tags-exporter
        securityContext:
          runAsGroup: 9999
          runAsNonRoot: true
          runAsUser: 9031
          allowPrivilegeEscalation: false
        image: public.ecr.aws/r2h3l6e4/pingcloud-monitoring/newrelic-tags-exporter/dev:v1.19-release-branch-latest
        imagePullPolicy: Always
        envFrom:
        - configMapRef:
            name: pingaccess-was-environment-variables
        - secretRef:
            name: newrelic-license-key
            optional: false
        env:
        - name: NEW_RELIC_APP_NAME
          value: "pingaccess-was"
        - name: METADATA_EP_URL
          value: "http://metadata:5000"
        - name: NEW_RELIC_CONFIG_FILEPATH
          value: "/opt/shared-dir/newrelic.yml"
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: LOG4J_FORMAT_MSG_NO_LOOKUPS
          value: "true"
        volumeMounts:
        - name: shared-dir
          mountPath: /opt/shared-dir
      containers:
      - name: pingaccess-was
        image: public.ecr.aws/r2h3l6e4/pingcloud-apps/pingaccess-was/dev:v1.19-release-branch-latest
        securityContext:
          runAsGroup: 9999
          runAsNonRoot: true
          runAsUser: 9031
          allowPrivilegeEscalation: false
        imagePullPolicy: Always
        resources:
          requests:
            memory: "1280Mi"
            cpu: 100m
          limits:
            memory: "2560Mi"
            cpu: 1
        volumeMounts:
        - name: ssh-dir
          mountPath: /home/ping/.ssh
        - name: shared-dir
          mountPath: /opt/shared-dir
        - name: topology-descriptor
          mountPath: /opt/staging/topology/descriptor.json
          subPath: descriptor.json
        - name: data-dir
          mountPath: /usr/local/bin/kubectl
          subPath: kubectl
        - name: data-dir
          mountPath: /opt/staging/hooks/logger.lib.sh
          subPath: logger.lib.sh
        - name: data-dir
          mountPath: /opt/staging/newrelic.jar
          subPath: newrelic.jar
        - name: pingaccess-was-license
          mountPath: /opt/in/instance/conf/pingaccess.lic
          subPath: pingaccess.lic
        - name: data-dir
          mountPath: /opt/staging/ds_env_vars
          subPath: ds_env_vars
        readinessProbe:
          exec:
            command: [ /opt/staging/hooks/99-pa-was-engine-liveness.sh ]
          initialDelaySeconds: 60
          periodSeconds: 5
          failureThreshold: 3
          timeoutSeconds: 5
        livenessProbe:
          exec:
            command: [ /opt/staging/hooks/99-pa-was-engine-liveness.sh ]
          initialDelaySeconds: 60
          periodSeconds: 30
          failureThreshold: 3
          timeoutSeconds: 5
        lifecycle:
          preStop:
            exec:
              command:
              - /opt/staging/hooks/86-pre-stop.sh
        ports:
        - containerPort: 3000
        env:
        - name: OPERATIONAL_MODE
          value: CLUSTERED_ENGINE
        - name: PA_ADMIN_USER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: pingaccess-was-passwords
              key: PA_ADMIN_USER_PASSWORD
        - name: NEW_RELIC_CONFIG_FILE
          value: "/opt/shared-dir/newrelic.yml"
        - name: LOG4J_FORMAT_MSG_NO_LOOKUPS
          value: "true"
        envFrom:
        - configMapRef:
            name: pingaccess-was-environment-variables
        - secretRef:
            name: newrelic-license-key
            optional: true
      securityContext:
        fsGroup: 9999
      volumes:
      - name: ssh-dir
        emptyDir: {}
      - name: shared-dir
        emptyDir: {}
      - name: data-dir
        emptyDir: {}
      - name: pingaccess-was-init
        configMap:
          name: pingcommon-init
          defaultMode: 0555
      - name: topology-descriptor
        configMap:
          name: topology-descriptor
          optional: true
          defaultMode: 0644
      - name: ssh-id-key-secret
        secret:
          secretName: ssh-id-key-secret
          optional: true
          defaultMode: 0400
      - name: known-hosts-config
        configMap:
          name: known-hosts-config
          optional: true
          defaultMode: 0644
      - name: pingaccess-was-license
        secret:
          secretName: pingaccess-was-license
          optional: true
          defaultMode: 0400
      - name: pingaccess-was-passwords
        secret:
          secretName: pingaccess-was-passwords
          optional: true
          defaultMode: 0400
