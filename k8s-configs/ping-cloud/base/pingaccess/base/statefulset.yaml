# This defines the pingaccess admin deployment.

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: pingaccess-admin
  labels:
    cluster: pingaccess-cluster
    role: pingaccess-admin
spec:
  selector:
    matchLabels:
      role: pingaccess-admin
  replicas: 1
  serviceName: pingaccess-admin
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: OrderedReady
  template:
    metadata:
      name: pingaccess-admin
      labels:
        cluster: pingaccess-cluster
        role: pingaccess-admin
      annotations:
        lastUpdateReason: "NA"
    spec:
      serviceAccount: ping-serviceaccount
      securityContext:
        fsGroup: 9999
      initContainers:
      - name: delete-mount-contents
        image: alpine:3.12
        volumeMounts:
          - name: mount-dir
            mountPath: /mount
        command: ['sh', '-c', 'rm -rf /mount/*']
      - name: apply-server-profile
        image: 705370621539.dkr.ecr.us-west-2.amazonaws.com/geoff/init-apply-profile
        imagePullPolicy: Always
        env:
        - name: MOUNT_DIR
          value: /mount
        - name: OPERATIONAL_MODE
          value: CLUSTERED_CONSOLE  
        - name: SERVER_PROFILE_URL
          value: ${CONFIG_REPO_URL}
        - name: SERVER_PROFILE_PATH
          value: profiles/aws/pingaccess
        - name: SERVER_PROFILE_BRANCH
          value: modularize
        envFrom:
        - configMapRef:
            name: pingaccess-environment-variables
        volumeMounts:
          - name: mount-dir
            mountPath: /mount
      - name: pingaccess-restore
        image: 705370621539.dkr.ecr.us-west-2.amazonaws.com/geoff/init-pa-restore
        imagePullPolicy: Always
        env:
        - name: BACKUP_URL
          value: ${LOG_ARCHIVE_URL}
        - name: MOUNT_DIR
          value: /mount
        volumeMounts:
        - name: mount-dir
          mountPath: /mount
      - name: pingaccess-init
        # FIXME: switch to same user as app
        securityContext:
          runAsNonRoot: false
          runAsUser: 0
        image: bitnami/kubectl:1.15.3
        imagePullPolicy: IfNotPresent
        command:
        - /init.sh
        volumeMounts:
        - name: ssh-dir
          mountPath: /.ssh
        - name: data-dir
          mountPath: /data
        - name: ssh-id-key-secret
          mountPath: /id_rsa
          subPath: id_rsa
        - name: known-hosts-config
          mountPath: /known_hosts
          subPath: known_hosts
        - name: pingaccess-init
          mountPath: /init.sh
          subPath: init.sh
        envFrom:
        - configMapRef:
            name: pingaccess-environment-variables
      containers:
      - name: pingaccess-admin
        image: 705370621539.dkr.ecr.us-west-2.amazonaws.com/geoff/pingaccess
        imagePullPolicy: Always
        resources:
          requests:
            memory: "1Gi"
            cpu: "1"
          limits:
            memory: "1Gi"
            cpu: "1"
        volumeMounts:
        # FIXME: fix home directory when containers run as non-root user
        - name: ssh-dir
          mountPath: /root/.ssh
        - name: data-dir
          mountPath: /usr/local/bin/kubectl
          subPath: kubectl
#        - name: pingaccess-license
#          mountPath: /mount/conf/pingaccess.lic
#          subPath: pingaccess.lic
        - name: mount-dir
          mountPath: /mount
        readinessProbe:
          exec:
            command:
              - /mount/bin/85-readiness.sh
          initialDelaySeconds: 60
          periodSeconds: 5
          failureThreshold: 3
        livenessProbe:
          exec:
            command: [ /app/liveness.sh ]
          initialDelaySeconds: 60
          periodSeconds: 30
          failureThreshold: 3
        ports:
        - containerPort: 9000
        - containerPort: 9090
        env:
        - name: MOUNT_DIR
          value: /mount    
        - name: OPERATIONAL_MODE
          value: CLUSTERED_CONSOLE
        - name: HTTPS_PORT
          value: "9090"
        - name: OLD_PA_ADMIN_USER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: pingaccess-passwords
              key: OLD_PA_ADMIN_USER_PASSWORD
        - name: PA_ADMIN_USER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: pingaccess-passwords
              key: PA_ADMIN_USER_PASSWORD
        envFrom:
        - configMapRef:
            name: pingaccess-environment-variables
        - secretRef:
            name: devops-secret
            optional: true
      volumes:
      - name: ssh-dir
        emptyDir: {}
      - name: data-dir
        emptyDir: {}
      - name: pingaccess-init
        configMap:
          name: pingcommon-init
          defaultMode: 0555
      - name: ssh-id-key-secret
        secret:
          secretName: ssh-id-key-secret
          optional: true
          defaultMode: 0400
      - name: known-hosts-config
        configMap:
          name: known-hosts-config
          optional: true
          defaultMode: 0644
      - name: mount-dir
        persistentVolumeClaim:
          claimName: mount-dir
#      - name: pingaccess-license
#        secret:
#          secretName: pingaccess-license
#          optional: true
#          defaultMode: 0400
      - name: pingaccess-passwords
        secret:
          secretName: pingaccess-passwords
          optional: true
          defaultMode: 0400
  volumeClaimTemplates:
  - metadata:
      name: mount-dir
    spec:
      accessModes:
      - ReadWriteOnce
      storageClassName: pingaccess-gp2
      resources:
        requests:
          storage: 20Gi

---

# This defines the pingaccess engine deployment.

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: pingaccess
  labels:
    cluster: pingaccess-cluster
    role: pingaccess-engine
spec:
  selector:
    matchLabels:
      role: pingaccess-engine
  serviceName: pingaccess
  podManagementPolicy: OrderedReady
  template:
    metadata:
      name: pingaccess-engine
      labels:
        cluster: pingaccess-cluster
        role: pingaccess-engine
      annotations:
        lastUpdateReason: "NA"
    spec:
      serviceAccount: ping-serviceaccount
      securityContext:
        fsGroup: 9999
      initContainers:
      - name: delete-mount-contents
        image: alpine:3.12
        volumeMounts:
          - name: mount-dir
            mountPath: /mount
        command: ['sh', '-c', 'rm -rf /mount/*']
      - name: apply-server-profile
        image: 705370621539.dkr.ecr.us-west-2.amazonaws.com/geoff/init-apply-profile
        imagePullPolicy: Always
        env:
        - name: MOUNT_DIR
          value: /mount
        - name: OPERATIONAL_MODE
          value: CLUSTERED_ENGINE
        - name: SERVER_PROFILE_URL
          value: ${CONFIG_REPO_URL}
        - name: SERVER_PROFILE_PATH
          value: profiles/aws/pingaccess
        - name: SERVER_PROFILE_BRANCH
          value: modularize
        envFrom:
        - configMapRef:
            name: pingaccess-environment-variables
        volumeMounts:
          - name: mount-dir
            mountPath: /mount
      - name: pingaccess-init
        # FIXME: switch to same user as app
        securityContext:
          runAsNonRoot: false
          runAsUser: 0
        image: bitnami/kubectl:1.15.3
        imagePullPolicy: IfNotPresent
        command:
        - /init.sh
        volumeMounts:
        - name: ssh-dir
          mountPath: /.ssh
        - name: data-dir
          mountPath: /data
        - name: ssh-id-key-secret
          mountPath: /id_rsa
          subPath: id_rsa
        - name: known-hosts-config
          mountPath: /known_hosts
          subPath: known_hosts
        - name: pingaccess-init
          mountPath: /init.sh
          subPath: init.sh
        envFrom:
        - configMapRef:
            name: pingaccess-environment-variables
      containers:
      - name: pingaccess
        image: 705370621539.dkr.ecr.us-west-2.amazonaws.com/geoff/pingaccess
        imagePullPolicy: Always
        resources:
          requests:
            memory: "1Gi"
            cpu: "1"
          limits:
            memory: "1Gi"
            cpu: "1"
        volumeMounts:
        # FIXME: fix home directory when containers run as non-root user
        - name: ssh-dir
          mountPath: /root/.ssh
        - name: data-dir
          mountPath: /usr/local/bin/kubectl
          subPath: kubectl
        - name: data-dir
          mountPath: /usr/local/bin/skbn
          subPath: skbn
        - name: pingaccess-license
          mountPath: /mount/conf/pingaccess.lic
          subPath: pingaccess.lic
        - name: pingaccess-pre-stop
          mountPath: /opt/staging/pre-stop.sh
          subPath: pre-stop.sh
        - name: data-dir
          mountPath: /opt/staging/env_vars
          subPath: env_vars
        - name: mount-dir
          mountPath: /mount
        readinessProbe:
          exec:
            command: [ /app/liveness.sh ]
          initialDelaySeconds: 60
          periodSeconds: 5
          failureThreshold: 300 #TODO: orig was 3
        livenessProbe:
          exec:
            command: [ /app/liveness.sh ]
          initialDelaySeconds: 60
          periodSeconds: 30
          failureThreshold: 300 # TODO: orig was 3
        lifecycle:
          preStop:
            exec:
              command:
              - /opt/staging/pre-stop.sh
        ports:
        - containerPort: 3000
        - containerPort: 3030
        env:
        - name: VERBOSE
          value: "true"
        - name: PA_CONSOLE_HOST
          value: pingaccess-admin
        - name: MOUNT_DIR
          value: /mount
        - name: OPERATIONAL_MODE
          value: CLUSTERED_ENGINE
        - name: PA_LOG_LEVEL
          value: TRACE
        - name: PA_ADMIN_USER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: pingaccess-passwords
              key: PA_ADMIN_USER_PASSWORD
        envFrom:
        - configMapRef:
            name: pingaccess-environment-variables
        - secretRef:
            name: devops-secret
            optional: true
      volumes:
      - name: ssh-dir
        emptyDir: {}
      - name: data-dir
        emptyDir: {}
      - name: pingaccess-init
        configMap:
          name: pingcommon-init
          defaultMode: 0555
      - name: ssh-id-key-secret
        secret:
          secretName: ssh-id-key-secret
          optional: true
          defaultMode: 0400
      - name: known-hosts-config
        configMap:
          name: known-hosts-config
          optional: true
          defaultMode: 0644
      - name: pingaccess-license
        secret:
          secretName: pingaccess-license
          optional: true
          defaultMode: 0400
      - name: pingaccess-passwords
        secret:
          secretName: pingaccess-passwords
          optional: true
          defaultMode: 0400
      - name: pingaccess-pre-stop
        configMap:
          name: pingaccess-pre-stop
          defaultMode: 0555
      - name: mount-dir
        persistentVolumeClaim:
          claimName: mount-dir
  volumeClaimTemplates:
  - metadata:
      name: mount-dir
    spec:
      accessModes:
      - ReadWriteOnce
      storageClassName: pingaccess-gp2
      resources:
        requests:
          storage: 5Gi