# This patch may be applied to the pingfederate engines statefulset to start up a sidecar container to add radius proxy

# This patch requires a secret object of the name pointed by the SECRET_NAME environment variable to
# exist. This is usually created by cert-manager, which interacts with Let's encrypt to issue an ACME certificate.
# For BYOC use cases, the secret may be created declaratively with the tls.crt and tls.key that contains the identity
# certificate and key in base64-encoded PEM format.

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: pingfederate
spec:
  template:
    spec:
      serviceAccountName: pingcloud-radsecproxy-serviceaccount
      initContainers:
        - name: wait-for-tls-secret
          securityContext:
            privileged: false
            runAsGroup: 2000
            runAsUser: 1000
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
          image: public.ecr.aws/r2h3l6e4/pingcloud-services/toolkit:v1.19.0
          command: [ "/bin/sh", "-c" ]
          args: [ while ! kubectl get secret $(SECRET_NAME); do echo "Waiting for secret $(SECRET_NAME). CTRL-C to exit."; sleep 5; done ]
          env:
            - name: "WAIT_TIMEOUT_SEC"
              value: "300"
            - name: "JOB_NAME"
              value: "wait-for-tls-secret"
            - name: "SECRET_NAME"
              value: "acme-tls-cert"
      containers:
        - name: pingcloud-radsecproxy
          image: public.ecr.aws/r2h3l6e4/pingcloud-services/grp-radiusproxy:v1.19.1.0_RC2
          imagePullPolicy: IfNotPresent
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          envFrom:
            - configMapRef:
                name: pingcloud-radsecproxy-environment-variables
            - configMapRef:
                name: pingfederate-environment-variables
          volumeMounts:
            - name: acme-tls-cert
              mountPath: /usr/local/secrets/certs
              readOnly: true
          resources:
            limits:
              memory: "500Mi"
              cpu: "400m"
            requests:
              memory: "200Mi"
              cpu: "200m"
          readinessProbe:
            tcpSocket:
              port: 2083
            initialDelaySeconds: 5
            periodSeconds: 10
            failureThreshold: 3
            successThreshold: 1
            timeoutSeconds: 3
          livenessProbe:
            tcpSocket:
              port: 2083
            initialDelaySeconds: 15
            periodSeconds: 20
            failureThreshold: 3
            successThreshold: 1
            timeoutSeconds: 3
          ports:
            - containerPort: 2083
      volumes:
        - name: acme-tls-cert
          secret:
            secretName: acme-tls-cert
            optional: true
            defaultMode: 0400

---

apiVersion: v1
kind: Service
metadata:
  name: pingfederate
spec:
  ports:
    - port: 2083
      targetPort: 2083
      name: radsec
