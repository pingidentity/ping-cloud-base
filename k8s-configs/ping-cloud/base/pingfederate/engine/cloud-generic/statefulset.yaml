#
# This defines the pingfederate runtime/engine statefulset.
#
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: pingfederate
  labels:
    cluster: pingfederate-cluster
    role: pingfederate-engine
spec:
  selector:
    matchLabels:
      role: pingfederate-engine
  serviceName: pingfederate
  podManagementPolicy: OrderedReady
  template:
    metadata:
      name: pingfederate-engine
      labels:
        cluster: pingfederate-cluster
        role: pingfederate-engine
        pod-reaper: enabled
      annotations:
        lastUpdateReason: "NA"
        prometheus.io/scrape: "true"
        prometheus.io/path: "/"
        prometheus.io/port: "8080"
        newrelic.io/scrape: "true"
    spec:
      serviceAccountName: ping-serviceaccount
      affinity:
        podAntiAffinity:
          # Add a soft requirement for each PF runtime pod to be deployed to a different AZ
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: role
                      operator: In
                      values:
                        - pingfederate-engine
                topologyKey: "topology.kubernetes.io/zone"
      initContainers:
      - name: pingfederate-init
        securityContext:
          runAsGroup: 9999
          runAsNonRoot: true
          runAsUser: 9031
          allowPrivilegeEscalation: false
        image: public.ecr.aws/r2h3l6e4/pingcloud-services/toolkit:v1.19.0
        imagePullPolicy: IfNotPresent
        command:
        - /copy-dependencies.sh
        volumeMounts:
        - name: ssh-dir
          mountPath: /.ssh
        - name: data-dir
          mountPath: /data
        - name: ssh-id-key-secret
          mountPath: /id_rsa
          subPath: id_rsa
        - name: known-hosts-config
          mountPath: /known_hosts
          subPath: known_hosts
        - name: pingfederate-init
          mountPath: /copy-dependencies.sh
          subPath: copy-dependencies.sh
        - name: pingfederate-init
          mountPath: /utils.lib.sh
          subPath: utils.lib.sh
        - name: pingfederate-init
          mountPath: /logger.lib.sh
          subPath: logger.lib.sh
        envFrom:
        - configMapRef:
            name: pingfederate-environment-variables
      - name: newrelic-tags-exporter
        securityContext:
          runAsGroup: 9999
          runAsNonRoot: true
          runAsUser: 9031
          allowPrivilegeEscalation: false
        image: public.ecr.aws/r2h3l6e4/pingcloud-monitoring/newrelic-tags-exporter:v1.19.1.0_RC3
        imagePullPolicy: Always
        envFrom:
        - configMapRef:
            name: pingfederate-environment-variables
        - secretRef:
            name: newrelic-license-key
            optional: false
        env:
        - name: NEW_RELIC_APP_NAME
          value: "pingfederate"
        - name: METADATA_EP_URL
          value: "http://metadata:5000"
        - name: NEW_RELIC_CONFIG_FILEPATH
          value: "/opt/shared-dir/newrelic.yml"
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: LOG4J_FORMAT_MSG_NO_LOOKUPS
          value: "true"
        volumeMounts:
        - name: shared-dir
          mountPath: /opt/shared-dir
      - name: wait-for-services
        # FIXME PDO-3576: switch to same user as app
        securityContext:
          runAsGroup: 9999
          runAsNonRoot: true
          runAsUser: 9031
          allowPrivilegeEscalation: false
        image: public.ecr.aws/r2h3l6e4/pingcloud-clustertools/busybox:1.36
        imagePullPolicy: IfNotPresent
        command:
        - /wait-for-services.sh
        volumeMounts:
        - name: pingfederate-init
          mountPath: /utils.lib.sh
          subPath: utils.lib.sh
        - name: pingfederate-init
          mountPath: /logger.lib.sh
          subPath: logger.lib.sh
        - name: pingfederate-init
          mountPath: /wait-for-services.sh
          subPath: wait-for-services.sh
        envFrom:
        - configMapRef:
            name: pingfederate-environment-variables
      containers:
      - name: pingfederate
        image: public.ecr.aws/r2h3l6e4/pingcloud-apps/pingfederate:v1.19.1.0_RC3
        securityContext:
          runAsGroup: 9999
          runAsNonRoot: true
          runAsUser: 9031
          allowPrivilegeEscalation: false
        imagePullPolicy: Always
        env:
        - name: OPERATIONAL_MODE
          value: CLUSTERED_ENGINE
        - name: AUTHENTICATION_MODE
          value: none
        - name: PF_DNS_PING_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: PF_ADMIN_USER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: pingcommon-passwords
              key: PF_ADMIN_USER_PASSWORD
        - name: PF_LDAP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: pingcommon-passwords
              key: PF_LDAP_PASSWORD
        - name: NEW_RELIC_CONFIG_FILE
          value: "/opt/shared-dir/newrelic.yml"
        - name: LOG4J_FORMAT_MSG_NO_LOOKUPS
          value: "true"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: PF_CLUSTER_AUTH_PASSWORD
          valueFrom:
            secretKeyRef:
              key: PF_CLUSTER_AUTH_PASSWORD
              name: pingfederate-cluster-auth-password
        envFrom:
        - configMapRef:
            name: pingfederate-environment-variables
        - secretRef:
            name: newrelic-license-key
            optional: false
        resources:
          requests:
            memory: "4Gi"
            cpu: 2
          limits:
            memory: "4Gi"
            cpu: 2
        volumeMounts:
        - name: ssh-dir
          mountPath: /home/ping/.ssh
        - name: shared-dir
          mountPath: /opt/shared-dir
        - name: topology-descriptor
          mountPath: /opt/staging/topology/descriptor.json
          subPath: descriptor.json
        - name: data-dir
          mountPath: /usr/local/bin/kubectl
          subPath: kubectl
        - name: data-dir
          mountPath: /opt/staging/hooks/logger.lib.sh
          subPath: logger.lib.sh
        - name: data-dir
          mountPath: /opt/staging/jmx_prometheus_javaagent-0.14.0.jar
          subPath: jmx_prometheus_javaagent-0.14.0.jar
        - name: data-dir
          mountPath: /opt/staging/newrelic.jar
          subPath: newrelic.jar
        - name: data-dir
          mountPath: /opt/staging/native-s3-ping.jar
          subPath: native-s3-ping.jar
        - name: pingfederate-license
          mountPath: /opt/in/instance/server/default/conf/pingfederate.lic
          subPath: pingfederate.lic
        - name: data-dir
          mountPath: /opt/staging/ds_env_vars
          subPath: ds_env_vars
        - mountPath: /etc/podinfo
          name: podinfo
        - name: data-dir
          mountPath: /opt/staging/solutions_artifacts
          subPath: solutions_artifacts
        lifecycle:
          preStop:
            exec:
              command: ["sh", "-c", "sleep 5"]
        readinessProbe:
          exec:
            command: [ /opt/staging/hooks/99-pf-engine-liveness.sh ]
          initialDelaySeconds: 60
          periodSeconds: 5
          failureThreshold: 3
          timeoutSeconds: 5
        livenessProbe:
          exec:
            command: [ /opt/staging/hooks/99-pf-engine-liveness.sh ]
          initialDelaySeconds: 60
          periodSeconds: 30
          failureThreshold: 3
          timeoutSeconds: 5
        ports:
        - containerPort: 9031
        - containerPort: 8080
      - name: pingfederate-heartbeat-exporter
        securityContext:
          runAsGroup: 9999
          runAsNonRoot: true
          runAsUser: 9031
        image: public.ecr.aws/r2h3l6e4/pingcloud-monitoring/prometheus-json-exporter:v1.19.1.0_RC3
        imagePullPolicy: Always
        env:
          - name: SERVICE_SHORTNAME
            value: pf
          - name: SERVICE_PORT
            value: "9031"
          - name: REPEAT_SEC
            value: "10"
        ports:
          - containerPort: 8079
            name: pf-heartbeat
            protocol: TCP
        volumeMounts:
          - mountPath: /opt/config.yml
            subPath: config.yml
            name: pf-exporter-config
        resources:
          limits:
            cpu: 100m
            memory: 300Mi
          requests:
            cpu: 100m
            memory: 300Mi
      securityContext:
        fsGroup: 9999
      volumes:
      - name: podinfo
        downwardAPI:
          items:
            - path: labels
              fieldRef:
                fieldPath: metadata.labels
            - path: annotations
              fieldRef:
                fieldPath: metadata.annotations
            - path: cpu_limit
              resourceFieldRef:
                containerName: pingfederate
                divisor: 1m
                resource: limits.cpu
            - path: cpu_request
              resourceFieldRef:
                containerName: pingfederate
                divisor: 1m
                resource: requests.cpu
      - name: ssh-dir
        emptyDir: {}
      - name: shared-dir
        emptyDir: {}
      - name: data-dir
        emptyDir: {}
      - name: pingfederate-init
        configMap:
          name: pingcommon-init
          defaultMode: 0555
      - name: topology-descriptor
        configMap:
          name: topology-descriptor
          optional: true
          defaultMode: 0644
      - name: ssh-id-key-secret
        secret:
          secretName: ssh-id-key-secret
          optional: true
          defaultMode: 0400
      - name: known-hosts-config
        configMap:
          name: known-hosts-config
          optional: true
          defaultMode: 0644
      - name: pingfederate-license
        secret:
          secretName: pingfederate-license
          optional: true
          defaultMode: 0400
      - name: pf-exporter-config
        configMap:
          name: pf-exporter-config
          defaultMode: 0644
