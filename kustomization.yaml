apiVersion: kustomize.config.k8s.io/v1alpha1
kind: Component

resources:
  - deployment.yaml

configMapGenerator:
- name: cwagentconfig
  namespace: amazon-cloudwatch
  behavior: merge
  files:
    - cwagentconfig.json
    - prometheus.yaml

# This patch drop all the events from cloudwatch pipeline.
# Reassess this when upgrading to future releases, this is not applicable for 1.19.1 and above release.
- name: logstash-pipeline-cw
  namespace: elastic-stack-logging
  behavior: merge
  files:
    - cloudwatch.conf

# This patch drop all the events from newrelic pipeline.
# Reassess this when upgrading to future releases, this is not applicable for 1.19.1 and above release.
- name: logstash-pipeline-nr
  namespace: elastic-stack-logging
  behavior: merge
  files:
    - newrelic.conf

patchesStrategicMerge:
  - delete-daemonset.yaml
  - |-
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: logstash-pipeline-customer
      namespace: elastic-stack-logging
    data:
      01-input.conf: |
        input {
          http {
            port => 8084
            add_field => { "cluster_name" => "${CLUSTER_NAME}" }
            id => "customer_in"
            max_pending_requests => 1000
            threads => 2
          }
        }
        filter {
          mutate {
            remove_field => ["date", "headers"]
          }
        }
  - |-
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: os-ism-policies
      namespace: elastic-stack-logging
    data:
      ping-general.json: |-
        {
          "policy": {
            "states": [
              {
                "name": "warm",
                "transitions": [
                  {
                    "state_name": "delete",
                    "conditions": {
                      "min_index_age": "180d"
                    }
                  }
                ]
              }
            ]
          }
        }
  - |-
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: kube-state-metrics
      namespace: kube-system
    spec:
      template:
        spec:
          containers:
            - name: kube-state-metrics
              args:
                - --resources=persistentvolumeclaims,persistentvolumes,pods,nodes,endpoints
                - --namespaces-denylist=default, health, kube-node-lease, kube-public, kube-system, pod-reaper, newrelic


patchesJson6902:
  - target:
      version: v1
      kind: ConfigMap
      name: os-ism-policies
      namespace: elastic-stack-logging
    patch: |-
      - op: replace
        path: /data/ping-general.json
        value: |-
          {
            "policy": {
                "policy_id": "ping_standard_policy",
                "description": "Standard ping policy (after 30 days read-only, after 90 days move to warm, after 180d delete)",
                "last_updated_time": 1684846142111,
                "schema_version": 17,
                "error_notification": null,
                "default_state": "hot",
                "states": [
                    {
                        "name": "hot",
                        "actions": [],
                        "transitions": [
                            {
                                "state_name": "RO",
                                "conditions": {
                                    "min_index_age": "30d"
                                }
                            }
                        ]
                    },
                    {
                        "name": "RO",
                        "actions": [
                            {
                                "retry": {
                                    "count": 3,
                                    "backoff": "exponential",
                                    "delay": "1m"
                                },
                                "read_only": {}
                            }
                        ],
                        "transitions": [
                            {
                                "state_name": "warm",
                                "conditions": {
                                    "min_index_age": "90d"
                                }
                            }
                        ]
                    },
                    {
                        "name": "warm",
                        "actions": [
                            {
                                "retry": {
                                    "count": 3,
                                    "backoff": "exponential",
                                    "delay": "1m"
                                },
                                "replica_count": {
                                    "number_of_replicas": 1
                                }
                            },
                            {
                                "retry": {
                                    "count": 3,
                                    "backoff": "exponential",
                                    "delay": "1m"
                                },
                                "force_merge": {
                                    "max_num_segments": 1
                                }
                            },
                            {
                                "retry": {
                                    "count": 3,
                                    "backoff": "exponential",
                                    "delay": "1m"
                                },
                                "read_only": {}
                            },
                            {
                                "retry": {
                                    "count": 3,
                                    "backoff": "exponential",
                                    "delay": "1m"
                                },
                                "allocation": {
                                    "require": {
                                        "temp": "warm"
                                    },
                                    "include": {},
                                    "exclude": {},
                                    "wait_for": false
                                }
                            }
                        ],
                        "transitions": [
                            {
                                "state_name": "delete",
                                "conditions": {
                                    "min_index_age": "180d"
                                }
                            }
                        ]
                    },
                    {
                        "name": "delete",
                        "actions": [
                            {
                                "retry": {
                                    "count": 3,
                                    "backoff": "exponential",
                                    "delay": "1m"
                                },
                                "delete": {}
                            }
                        ],
                        "transitions": []
                    }
                ],
                "ism_template": [
                    {
                        "index_patterns": [
                            "pd-*",
                            "pf-*",
                            "pa-*",
                            "pc-*",
                            "pdg-*",
                            "pds-*",
                            "ingress-*",
                            "logstash-*"
                        ],
                        "priority": 1,
                        "last_updated_time": 1684842823048
                    }
                ]
            }
        }
